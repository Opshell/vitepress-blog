:root {
    --color-primary: #FF7B00;
    --color-primary-light: #FFA100;
    --color-primary-dark: #853D14;
    --color-primary-dilute: #FFD4A1;

    --color-sub: #e5b436;
    --color-hover-light: #FFD4A1;

    --color-extreme: #000;
    --color-extreme-reverse: #fff;
    --color-title: #1F1F1F;
    --color-text: #595959;
    --color-view-block: #F2F2F2;
    --color-border-box: #D9D9D9;
    --color-text-light: #BFBFBF;

    --color-btn-background: #cfd6dc;
    --color-btn-fill: #696a70;

    // 狀態色
    --color-success: #03A61C;
    --color-warning: #FAAD14;
    --color-error: #F23005;
    --color-info: #1890FF;
    --color-link: #853D14;

    // 社群色
    --color-facebook: #3b5998;
    --color-line: #00BA01;
    --color-twitter: #1DA1F2;

    --font-size-h1: 1.5rem;
    --font-size-h2: 1.25rem;
    --font-size-normal: 1rem;
    --font-size-remark: 0.875rem;
}

/**
 * Customize default theme styling by overriding CSS variables:
 * https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
 */

/**
 * Colors
 *
 * Each colors have exact same color scale system with 3 levels of solid
 * colors with different brightness, and 1 soft color.
 *
 * - `XXX-1`: The most solid color used mainly for colored text. It must
 *   satisfy the contrast ratio against when used on top of `XXX-soft`.
 *
 * - `XXX-2`: The color used mainly for hover state of the button.
 *
 * - `XXX-3`: The color for solid background, such as bg color of the button.
 *   It must satisfy the contrast ratio with pure white (#ffffff) text on
 *   top of it.
 *
 * - `XXX-soft`: The color used for subtle background such as custom container
 *   or badges. It must satisfy the contrast ratio when putting `XXX-1` colors
 *   on top of it.
 *
 *   The soft color must be semi transparent alpha channel. This is crucial
 *   because it allows adding multiple "soft" colors on top of each other
 *   to create a accent, such as when having inline code block inside
 *   custom containers.
 *
 * - `default`: The color used purely for subtle indication without any
 *   special meanings attched to it such as bg color for menu hover state.
 *
 * - `brand`: Used for primary brand colors, such as link text, button with
 *   brand theme, etc.
 *
 * - `tip`: Used to indicate useful information. The default theme uses the
 *   brand color for this by default.
 *
 * - `warning`: Used to indicate warning to the users. Used in custom
 *   container, badges, etc.
 *
 * - `danger`: Used to show error, or dangerous message to the users. Used
 *   in custom container, badges, etc.
 * -------------------------------------------------------------------------- */

:root {
    --vp-c-default-1: var(--vp-c-gray-1);
    --vp-c-default-2: var(--vp-c-gray-2);
    --vp-c-default-3: var(--vp-c-gray-3);
    --vp-c-default-soft: var(--vp-c-gray-soft);

    /* --vp-c-brand-1: var(--vp-c-indigo-1); */
    --vp-c-brand-1: #fec020;
    --vp-c-brand-2: var(--vp-c-indigo-2);
    --vp-c-brand-3: var(--vp-c-indigo-3);
    --vp-c-brand-soft: var(--vp-c-indigo-soft);

    --vp-c-tip-1: var(--vp-c-brand-1);
    --vp-c-tip-2: var(--vp-c-brand-2);
    --vp-c-tip-3: var(--vp-c-brand-3);
    --vp-c-tip-soft: var(--vp-c-brand-soft);

    --vp-c-warning-1: var(--vp-c-yellow-1);
    --vp-c-warning-2: var(--vp-c-yellow-2);
    --vp-c-warning-3: var(--vp-c-yellow-3);
    --vp-c-warning-soft: var(--vp-c-yellow-soft);

    --vp-c-danger-1: var(--vp-c-red-1);
    --vp-c-danger-2: var(--vp-c-red-2);
    --vp-c-danger-3: var(--vp-c-red-3);
    --vp-c-danger-soft: var(--vp-c-red-soft);
}

/**
* Component: Button
* -------------------------------------------------------------------------- */

:root {
    --vp-button-brand-border: transparent;
    --vp-button-brand-text: var(--vp-c-white);
    --vp-button-brand-bg: var(--vp-c-brand-3);
    --vp-button-brand-hover-border: transparent;
    --vp-button-brand-hover-text: var(--vp-c-white);
    --vp-button-brand-hover-bg: var(--vp-c-brand-2);
    --vp-button-brand-active-border: transparent;
    --vp-button-brand-active-text: var(--vp-c-white);
    --vp-button-brand-active-bg: var(--vp-c-brand-1);
}

/**
* Component: Home
* -------------------------------------------------------------------------- */

:root {
    --vp-home-hero-name-color: transparent;
    --vp-home-hero-name-background: -webkit-linear-gradient(
        120deg,
        #bd34fe 30%,
        #41d1ff
    );

    --vp-home-hero-image-background-image: linear-gradient(
        -45deg,
        #bd34fe 50%,
        #47caff 50%
    );
    --vp-home-hero-image-filter: blur(44px);
}

@media (min-width: 640px) {
    :root {
        --vp-home-hero-image-filter: blur(56px);
    }
}

@media (min-width: 960px) {
    :root {
        --vp-home-hero-image-filter: blur(68px);
    }
}

/**
* Component: Custom Block
* -------------------------------------------------------------------------- */

:root {
    --vp-custom-block-tip-border: transparent;
    --vp-custom-block-tip-text: var(--vp-c-text-1);
    --vp-custom-block-tip-bg: var(--vp-c-brand-soft);
    --vp-custom-block-tip-code-bg: var(--vp-c-brand-soft);
}

/**
* Component: Algolia
* -------------------------------------------------------------------------- */

.DocSearch {
    --docsearch-primary-color: var(--vp-c-brand-1) !important;
}


// 預設文字樣式
%baseFont {
    fill: var(--color-primary);
    color: var(--color-text);

    font-family: 'Roboto', 'NotoSansTC', '微軟正黑體', 'Arial', sans-serif;
    font-weight: 400;
    -webkit-text-stroke: 0.1px;
    letter-spacing: 1px;
}

// 大區域 範圍設定
%scope {
    width: 100%;
    padding-left: calc((100% - 1610px) / 2);
    padding-right: calc((100% - 1610px) / 2);
    margin: 0 auto;

    @include setRWD (1680px) {
        padding-left: 1.875rem;
        padding-right: 1.875rem;
    }

    @include setRWD (1024px) {
        padding-left: 1.428rem;
        padding-right: 1.428rem;
    }

    @include setRWD (600px) {
        padding-left: .83rem;
        padding-right: .83rem;
    }
}

$shadow: 0 0 1px 0 rgba(0, 0, 0, .15);
$shadow-in: 0 0 1px 0 rgba(0, 0, 0, .15) inset;

$cubic-FiSo: cubic-bezier(.37, .99, .92, .96); //快進場緩停
$cubic-FiFo: cubic-bezier(.25, .65, .85, .45); //快進快出
$cubic-SiRo: cubic-bezier(.31, 1.26, .19, 1.11); //快速回彈
$cubic-SiMo: cubic-bezier(.3, 1, .94, 1.1); //緩進微彈

// 設定卷軸樣式
@mixin setScroll($size: 10px) {
    // 卷軸體
    &::-webkit-scrollbar {
        background: VAR(--color-btn-fill);
        width: $size;
        border-radius: calc($size / 2);
    }
    // 卷軸底
    &::-webkit-scrollbar-thumb {
        background: var(--color-primary);
        border-radius: calc($size / 2);
        border: 0.5px solid rgba(153, 153, 153, 0.25);
        // box-shadow: 0 0 10px 2px #20476e;
    }

    // 卷軸按鈕
    // &::-webkit-scrollbar-button {
    //     background: transparent; // 設定transparent會隱藏按鈕
    //     border-radius: 4px;
    // }
    // &::-webkit-scrollbar-track-piece {
    //     background: transparent; // 設定transparent會隱藏卷軸底
    // }

    // 卷軸底底 (可以幫卷軸底加陰影
    // &::-webkit-scrollbar-track {
    //     box-shadow: transparent;
    // }
}

// 動畫
@import 'animate';
